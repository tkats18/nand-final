class ShipManager{
    
    field Array playerShips;
    field int playerLoglen;

    field Array computerShips;
    field int computerLoglen;


    constructor ShipManager new(){
        let playerShips = Array.new(7);
        let computerShips = Array.new(7);
        let playerLoglen = 0;
        let computerLoglen = 0;
        return this;
    }

    method void addToPlayerShip(int shipIndex, Square sq){
        var Ship curShip;

        if (~(playerLoglen>shipIndex)){
            let curShip = Ship.new(shipIndex);
            let playerShips[shipIndex] = curShip;
            let playerLoglen = shipIndex+1; 
        }else{
            let curShip = playerShips[shipIndex];
        }

        do curShip.addSquare(sq);
        return;
    }

    
    method void addToComputerShip(int shipIndex, Square sq){
        var Ship curShip;
        
        if (~(computerLoglen>shipIndex)){
            let curShip = Ship.new(shipIndex);
            let computerShips[shipIndex] = curShip;
            let computerLoglen = shipIndex + 1; 
        }else{
            let curShip = computerShips[shipIndex];
        }

        do curShip.addSquare(sq);
        return;
    }

    method boolean checkComputerSink(int ind){
        var Ship s;
        let s = computerShips[ind];
        return s.checkSink();
    }

    method boolean checkPlayerSink(int ind){
        var Ship s;
        let s = playerShips[ind];
        return s.checkSink();
    }

    method int getLoglen(){
        return computerLoglen;
    }

    method boolean validate(){
        var int i, curNum;
        var int oneNum, twoNum, threeNum, fourNum, fiveNum;
        var Ship curShip;

        let curNum = -1;
        let oneNum = 0;
        let twoNum = 0;
        let threeNum = 0;
        let fourNum = 0;
        let fiveNum = 0;

        if (~(playerLoglen = 7)){
            return false;
        }
        
        let i = 0;

        while(i<7){
            let curShip = playerShips[i];
            let curNum = curShip.getShipLen();
 
            if (curNum = 1){
                let oneNum = oneNum + 1;
            }

            if (curNum = 2){
                let twoNum = twoNum + 1;
            }

            if (curNum = 3){
                let threeNum = threeNum + 1;
            }
            
            if (curNum = 4){
                let fourNum = fourNum + 1;
            }

            if (curNum = 5){
                let fiveNum = fiveNum + 1;
            }

            let i = i + 1; 
        }

        return ((fiveNum = 1) & (fourNum = 1) & (threeNum = 1) & (twoNum = 2) & (oneNum = 2));
    }



}